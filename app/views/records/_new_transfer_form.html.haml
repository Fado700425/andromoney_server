.transferForm.clearfix.hide
  = form_for @record, url: transfer_records_path(@record, month_from_now: params[:month_from_now]) do |f|
    .input-group
      %span.input-group-addon
        %span.glyphicon.glyphicon-calendar
        #{t('report.date')}
      = f.text_field(:date,{id: "datepicker", readonly: true, class: "form-control", data: {behaviour: "datepicker"}, value: Time.now.strftime("%Y/%m/%d")})
    %br  
    .input-group
      %span.input-group-addon
        = image_tag("currency_sign_dollar.png", width: "15px")
        #{t('amount')}
      = f.number_field(:mount, class: "form-control", :step => 'any')
      - if @payments[0][0].currency_code == @payments[0][1].currency_code
        %span.input-group-addon.hide.in_amout
          %span.glyphicon.glyphicon-arrow-right
        = f.number_field(:in_amount, class: "form-control hide in_amout", :step => 'any')
      - else
        %span.input-group-addon.in_amout
          %span.glyphicon.glyphicon-arrow-right
        = f.number_field(:in_amount, class: "form-control in_amout", :step => 'any')
      
    %br
    .input-group
      %span.input-group-addon
        %span.glyphicon.glyphicon-book
        #{t('payment.payment')}
      = f.text_field(:out_payment, {class: "form-control", "data-toggle" => "modal", 'data-target' => "#myOutPaymentModal", value: "#{@payments[0][0].payment_name}(#{@payments[0][0].currency_code})", id: "transfer_out_payment", "currency-code" => @payments[0][0].currency_code})
      %span.input-group-addon
        %span.glyphicon.glyphicon-arrow-right
      = f.text_field(:in_payment, {class: "form-control", "data-toggle" => "modal", 'data-target' => "#myInPaymentModal", value: "#{@payments[0][1].payment_name}(#{@payments[0][1].currency_code})", id: "transfer_in_payment", "currency-code" => @payments[0][1].currency_code})
    
    / %br
    / .input-group
    /   %span.input-group-addon
    /     = image_tag("currency_sign_dollar.png", width: "15px")
    /     手續費
    /   = f.number_field(:fee, {class: "form-control", :step => 'any'})

    %br
    .input-group
      %span.input-group-addon
        %span.glyphicon.glyphicon-book
        #{t('project.project')}
      = f.text_field(:project, {class: "form-control", "data-toggle" => "modal", 'data-target' => "#myProjectModal",id: "transfer_project"})

    = f.hidden_field :category, value: @transfer_category[0][0].hash_key, id: "transfer_category"
    = f.hidden_field :sub_category, value: @transfer_subcategories[0][0].hash_key, id: "transfer_sub_category"

    %br
    %h4 #{t('category.main_category')}
    .mltab-type.tab-pane.active.in{"data-type" => "income"}
      %table.table.table-bordered
        %tbody.transfer_main_category
          - @transfer_category.each_with_index do |category_group,i|
            %tr
              - category_group.each_with_index do |category,j|
                - if(i==0 && j==0)
                  %td{data: {category_id: category.hash_key, category_name: category.category}, class: "warning"}
                    .category
                      = image_tag category.photo_path, width: "40px"
                      %br
                      = category.category
                - else
                  %td{data: {category_id: category.hash_key, category_name: category.category}}
                    .category
                      = image_tag category.photo_path, width: "40px"
                      %br
                      = category.category
              - (1..3-category_group.size).each do |i|
                %td
      %h4 #{t('subcategory.subcategory')}
      %table.table.table-bordered.category-table
        %tbody.sub_category.transfer_category
          = render 'subcategories', subcategories: @transfer_subcategories
    %h4 #{t('note')}
    = f.text_area :remark, class: 'form-control'
    .pull-right
      %br
      = f.submit t('confirm_add'), class: "btn btn-primary btn-lg"
